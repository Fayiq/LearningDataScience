use supply_chain;

##Read the data from all tables.

SELECT 
    *
FROM
    customer;
    
SELECT 
    *
FROM
    orderitem;
    
SELECT 
    *
FROM
    orders;
    
SELECT 
    *
FROM
    product;
    
SELECT 
    *
FROM
    supplier;
    
##Find the country wise count of customers.

SELECT 
    country, COUNT(*) AS count_of_customer
FROM
    customer
GROUP BY country
ORDER BY country;

##Display the products which are not discontinued.

SELECT 
    productname
FROM
    product
WHERE
    IsDiscontinued = 0
GROUP BY productname;

##Display the list of companies along with the product name that they are supplying.

SELECT 
    s.companyname AS CNamee, p.productname AS PName
FROM
    supplier s
        JOIN
    product p ON s.id = p.supplierid
GROUP BY s.companyname;

##Display customer's information who stays in 'Mexico'

SELECT 
    *
FROM
    customer
WHERE
    country LIKE 'mexico';
    
##Display the costliest item that is ordered by the customer.

SELECT 
    productname
FROM
    product
WHERE
    isdiscontinued = 0
ORDER BY unitprice DESC
LIMIT 1;

SELECT 
    id, productname
FROM
    product
WHERE
    isdiscontinued = 0
        AND id IN (SELECT 
            productid
        FROM
            orderitem
        GROUP BY productid)
ORDER BY unitprice DESC
LIMIT 1;

SELECT 
    p.id, p.productname
FROM
    product p
        JOIN
    orderitem o ON p.id = o.productid
ORDER BY p.unitprice DESC
LIMIT 1;

##Display supplier id who owns highest number of products.

SELECT 
    supplierid, COUNT(*) AS no_of_products
FROM
    product
GROUP BY supplierid
ORDER BY COUNT(*) DESC
LIMIT 1;

##Display month wise and year wise count of the orders placed.

SELECT 
    YEAR(orderdate) AS year,
    MONTH(orderdate) AS month,
    COUNT(*) AS no_of_orders
FROM
    orders
GROUP BY YEAR(orderdate) , MONTH(orderdate);

##Which country has maximum suppliers.

SELECT 
    country, COUNT(*) AS no_of_suppliers
FROM
    supplier
GROUP BY country
ORDER BY COUNT(*) DESC
LIMIT 1;

##Which customers did not place any order.

SELECT 
    *
FROM
    customer
WHERE
    id IN (SELECT 
            customerid
        FROM
            orders
        GROUP BY customerid);
        
##Arrange the product id, product name based on high demand by the customer.

SELECT 
    o.productid AS PID,
    p.ProductName AS PName,
    COUNT(*) AS no_of_orders
FROM
    orderitem o
        JOIN
    product p ON o.ProductId = p.id
GROUP BY o.productid
ORDER BY COUNT(*) DESC;

##Display the number of orders delivered every year.

SELECT 
    YEAR(orderdate) AS year, COUNT(*) AS no_of_orders
FROM
    orders
GROUP BY YEAR(orderdate);

##Calculate year-wise total revenue.

SELECT 
    YEAR(orderdate) AS year, SUM(totalamount) AS revenue
FROM
    orders
GROUP BY YEAR(orderdate);

##Display the customer details whose order amount is maximum including his past orders.

SELECT 
    c.id AS CID,
    CONCAT(c.firstname, ' ', c.lastname) AS CName,
    MAX(o.totalamount) AS max_bill
FROM
    customer c
        JOIN
    orders o ON c.id = o.customerid
GROUP BY c.id;

##Display total amount ordered by each customer from high to low.

SELECT 
    o.customerid AS CID,
    CONCAT(c.firstname, ' ', c.lastname) AS CName,
    SUM(o.totalamount) AS SUM_OF_TOTAL_BILL
FROM
    orders o
        JOIN
    customer c ON c.id = o.CustomerId
GROUP BY o.customerid
ORDER BY SUM(o.totalamount) DESC;

##Find out top 3 suppliers in terms of revenue generated by their products.

SELECT 
    s.companyname AS 'company name',
    SUM(o.totalamount) AS 'total revenue'
FROM
    supplier s
        JOIN
    product p ON s.id = p.supplierid
        JOIN
    orderitem oi ON p.id = oi.productid
        JOIN
    orders o ON oi.OrderId = o.id
GROUP BY s.companyname
ORDER BY o.TotalAmount DESC
LIMIT 3;

##Display latest order date (should not be same as first order date) of all the customers with customer details.

SELECT 
    s.companyname AS 'company name',
    MAX(o.OrderDate) AS 'order date',
    o.ordernumber
FROM
    supplier s
        JOIN
    product p ON s.id = p.supplierid
        JOIN
    orderitem oi ON p.id = oi.productid
        JOIN
    orders o ON oi.OrderId = o.id
GROUP BY s.companyname
ORDER BY MAX(o.orderdate) DESC;

##Display the product name and supplier name for each order

SELECT 
    p.productname AS 'product name',
    s.companyname AS 'company name'
FROM
    product p
        JOIN
    supplier s ON p.supplierid = s.id
GROUP BY p.productname , s.companyname;

##Fetch the records to display the customer details who ordered more than 10 products in the single order

SELECT 
    CONCAT(c.firstname, ' ', c.lastname) AS CName,
    c.city AS City,
    c.country AS Country,
    c.phone AS Phone
FROM
    customer c,
    (SELECT 
        o.customerid AS cid
    FROM
        orders o, (SELECT 
        orderid, COUNT(productid)
    FROM
        orderitem
    GROUP BY orderid
    HAVING COUNT(productid) > 10) l
    WHERE
        o.id = l.orderid
    GROUP BY o.customerid) f
WHERE
    c.id = f.cid;

##Display all the product details with the ordered quantity size as 1.

SELECT 
    *
FROM
    product p
        JOIN
    orderitem oi ON p.id = oi.productid
GROUP BY oi.orderid
HAVING COUNT(oi.productid) = 1;

##Display the compan(y)ies which supplies products whose cost is above 100.

SELECT 
    s.id AS SID,
    s.companyname AS CompanyName,
    p.ProductNAme AS Productname
FROM
    supplier s
        JOIN
    product p ON s.id = p.supplierid
WHERE
    p.unitprice > 100
        AND p.IsDiscontinued != 1
GROUP BY s.id;

##Display the customer list who belongs to same city and country arrange in country wise.

SELECT 
    country, city, CONCAT(firstname, ' ', lastname) AS Cname
FROM
    customer
#WHERE
 #   country = city
GROUP BY country , city , CONCAT(firstname, ' ', lastname)
ORDER BY country;

##3. Create a combined list to display customers and suppliers details considering the following criteria â€¢ Both customer and supplier belong to the same country
####Assumiong that the customer has purchased something from the supplier

SELECT 
    s.companyname AS SupplierName,
    CONCAT(c.firstname, ' ', c.lastname) AS 'Suppliers customers in the same country'
FROM
    customer c
        JOIN
    orders o ON c.id = o.customerid
        JOIN
    orderitem oi ON o.id = oi.orderid
        JOIN
    product p ON oi.productid = p.id
        JOIN
    supplier s ON p.supplierid = s.id
WHERE
    s.country = c.country
GROUP BY s.companyname , CONCAT(c.firstname, ' ', c.lastname);

##Customer who does not have supplier in their country
##Assumiong that the customer has purchased something from the supplier

SELECT 
    CONCAT(c.firstname, ' ', c.lastname) AS 'Customer who do not have suppier in their country'
FROM
    customer c
        JOIN
    orders o ON c.id = o.customerid
        JOIN
    orderitem oi ON o.id = oi.orderid
        JOIN
    product p ON oi.productid = p.id
        JOIN
    supplier s ON p.supplierid = s.id
WHERE
    c.country NOT IN (SELECT DISTINCT
            (country)
        FROM
            supplier)
GROUP BY CONCAT(c.firstname, ' ', c.lastname);

##Supplier who does not have customer in their country
##Assumiong that the customer has purchased something from the supplier

SELECT 
    s.companyname AS 'Companies who do not have customers in their country'
FROM
    customer c
        JOIN
    orders o ON c.id = o.customerid
        JOIN
    orderitem oi ON o.id = oi.orderid
        JOIN
    product p ON oi.productid = p.id
        JOIN
    supplier s ON p.supplierid = s.id
WHERE
    s.country NOT IN (SELECT DISTINCT
            (country)
        FROM
            customer)
GROUP BY s.companyname;

##Find out for which products, UK is dependent on other countries for the supply. List the countries which are supplying these products in the same list.

SELECT 
    s.country AS 'Countries Supplying to UK'
FROM
    supplier s
        JOIN
    product p ON s.id = p.supplierid
        JOIN
    orderitem oi ON p.id = oi.productid
        JOIN
    orders o ON oi.orderid = o.id
        JOIN
    customer c ON o.customerid = c.id
WHERE
    s.country NOT LIKE 'uk'
        AND c.country LIKE 'uk'
GROUP BY s.country;

##Mr. Kavin want to become a supplier. He got the database of "Richard's Supply" for reference. Help him to pick: a. List few products that he should choose based on demand.

SELECT 
    oi.productid AS PID,
    p.productname AS Pname,
    COUNT(oi.productid) AS Demand
FROM
    orderitem oi
        JOIN
    product p ON oi.productid = p.id
GROUP BY oi.productid , p.productname
ORDER BY COUNT(oi.productid) DESC;

##Who will be the competitors for him for the products suggested in above questions.

SELECT 
    j.PID AS pid,
    j.Pname AS productname,
    s.companyname AS competitor
FROM
    supplier s,
    (SELECT 
        oi.productid AS PID,
            p.productname AS Pname,
            COUNT(oi.productid) AS Demand
    FROM
        orderitem oi
    JOIN product p ON oi.productid = p.id
    GROUP BY oi.productid , p.productname
    ORDER BY COUNT(oi.productid) DESC) j
WHERE
    j.pid = s.id
GROUP BY j.pid , j.Pname;
